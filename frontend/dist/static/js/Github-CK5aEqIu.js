import{d as y,v as h,a6 as C,c,b as l,a7 as z,M as $,w as a,K as B,X as I,$ as L,a8 as j,a as o,a4 as O,B as Z,F as N,r as T,C as W,g as D,f as p,E as M,e as K,o as g,_ as w,k as P,u as X}from"./index-BrQRFijk.js";/* empty css                 *//* empty css                     *//* empty css               *//* empty css                  *//* empty css               */import{k as H}from"./index-CqoqUkBq.js";const J={class:"github-form"},Q=y({__name:"GithubForm",emits:["submit"],setup(V,{emit:_}){const f=_,i=h(),m=h(!1),t=C({repo:"",release:"",asset_name:"",platform:"",suffix:"offline"}),E=[{label:"Linux x86_64",value:"manylinux2014_x86_64"},{label:"Linux aarch64",value:"manylinux2014_aarch64"},{label:"Windows x86_64",value:"win_amd64"},{label:"macOS x86_64",value:"macosx_10_9_x86_64"},{label:"macOS arm64",value:"macosx_11_0_arm64"}],k={repo:[{required:!0,message:"请输入Github仓库",trigger:"blur"},{validator:(d,e,s)=>{if(!e)s(new Error("请输入Github仓库"));else{const n=/^([a-zA-Z0-9._-]+\/[a-zA-Z0-9._-]+)$|^https:\/\/github\.com\/[a-zA-Z0-9._-]+\/[a-zA-Z0-9._-]+$/,u=e.startsWith("http");u&&!H(e)?s(new Error("请输入有效的Github URL")):!u&&!n.test(e)?s(new Error("请输入正确的仓库格式，如: owner/repo")):s()}},trigger:"blur"}],release:[{required:!0,message:"请输入Release标签",trigger:"blur"},{min:1,max:50,message:"长度在 1 到 50 个字符",trigger:"blur"}],asset_name:[{required:!0,message:"请输入Assets文件名",trigger:"blur"},{validator:(d,e,s)=>{e?e.endsWith(".difypkg")?s():s(new Error("文件名必须以.difypkg结尾")):s(new Error("请输入Assets文件名"))},trigger:"blur"}]},v=async()=>{if(i.value)try{await i.value.validate(),m.value=!0;const d={repo:t.repo,release:t.release,asset_name:t.asset_name,platform:t.platform||void 0,suffix:t.suffix||"offline"};f("submit",d)}catch(d){console.error("表单验证失败:",d)}finally{m.value=!1}},G=()=>{i.value&&i.value.resetFields()};return(d,e)=>{const s=O,n=j,u=L,b=I,R=W,S=Z,U=K("Download"),A=M,x=D,F=z,q=B;return g(),c("div",J,[l(F,{ref_key:"formRef",ref:i,model:t,rules:k,"label-width":"120px",onSubmit:$(v,["prevent"])},{default:a(()=>[l(b,{gutter:24},{default:a(()=>[l(u,{span:12},{default:a(()=>[l(n,{label:"Github仓库",prop:"repo"},{default:a(()=>[l(s,{modelValue:t.repo,"onUpdate:modelValue":e[0]||(e[0]=r=>t.repo=r),placeholder:"例如: junjiem/dify-plugin-tools-dbquery",clearable:""},null,8,["modelValue"]),e[5]||(e[5]=o("div",{class:"input-help"}," 支持完整URL或仓库路径格式 ",-1))]),_:1,__:[5]})]),_:1}),l(u,{span:12},{default:a(()=>[l(n,{label:"Release标签",prop:"release"},{default:a(()=>[l(s,{modelValue:t.release,"onUpdate:modelValue":e[1]||(e[1]=r=>t.release=r),placeholder:"例如: v0.0.2",clearable:""},null,8,["modelValue"])]),_:1})]),_:1})]),_:1}),l(b,{gutter:24},{default:a(()=>[l(u,{span:12},{default:a(()=>[l(n,{label:"Assets文件名",prop:"asset_name"},{default:a(()=>[l(s,{modelValue:t.asset_name,"onUpdate:modelValue":e[2]||(e[2]=r=>t.asset_name=r),placeholder:"例如: db_query.difypkg",clearable:""},null,8,["modelValue"]),e[6]||(e[6]=o("div",{class:"input-help"}," 必须包含.difypkg后缀 ",-1))]),_:1,__:[6]})]),_:1}),l(u,{span:12},{default:a(()=>[l(n,{label:"目标平台"},{default:a(()=>[l(S,{modelValue:t.platform,"onUpdate:modelValue":e[3]||(e[3]=r=>t.platform=r),placeholder:"选择目标平台（可选）",clearable:"",style:{width:"100%"}},{default:a(()=>[(g(),c(N,null,T(E,r=>l(R,{key:r.value,label:r.label,value:r.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"])]),_:1})]),_:1})]),_:1}),l(b,{gutter:24},{default:a(()=>[l(u,{span:12},{default:a(()=>[l(n,{label:"包后缀"},{default:a(()=>[l(s,{modelValue:t.suffix,"onUpdate:modelValue":e[4]||(e[4]=r=>t.suffix=r),placeholder:"默认: offline"},null,8,["modelValue"])]),_:1})]),_:1})]),_:1}),l(n,null,{default:a(()=>[l(x,{type:"primary",onClick:v,loading:m.value,size:"large"},{default:a(()=>[l(A,null,{default:a(()=>[l(U)]),_:1}),e[7]||(e[7]=p(" 开始下载并重新打包 "))]),_:1,__:[7]},8,["loading"]),l(x,{onClick:G,size:"large"},{default:a(()=>e[8]||(e[8]=[p(" 重置 ")])),_:1,__:[8]})]),_:1})]),_:1},8,["model"]),l(q,{title:"示例",type:"info",closable:!1,class:"example-alert"},{default:a(()=>e[9]||(e[9]=[o("div",{class:"example-content"},[o("p",null,[o("strong",null,"仓库:"),p(" junjiem/dify-plugin-tools-dbquery")]),o("p",null,[o("strong",null,"Release:"),p(" v0.0.2")]),o("p",null,[o("strong",null,"文件名:"),p(" db_query.difypkg")]),o("p",null,[o("strong",null,"说明:"),p(" 将从 Github Release 下载指定的插件文件并重新打包")])],-1)])),_:1})])}}}),Y=w(Q,[["__scopeId","data-v-4c81ebed"]]),ee={class:"github-mode-page"},le={class:"github-form-container"},te=y({__name:"Github",setup(V){const _=X(),f=P(),i=async m=>{try{const t=await f.createGithubTask(m);t&&_.push(`/tasks/${t.task_id}`)}catch(t){console.error("Github任务创建失败:",t)}};return(m,t)=>(g(),c("div",ee,[t[0]||(t[0]=o("div",{class:"page-header"},[o("h1",null,"Github模式"),o("p",null,"从Github仓库下载插件进行重新打包处理")],-1)),o("div",le,[l(Y,{onSubmit:i})])]))}}),me=w(te,[["__scopeId","data-v-9a633b69"]]);export{me as default};
